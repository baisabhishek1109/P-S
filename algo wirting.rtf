{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 MarkerFelt-Thin;}
{\colortbl;\red255\green255\blue255;\red34\green21\blue67;}
{\*\expandedcolortbl;;\cssrgb\c17716\c12301\c33221;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15380\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \shad\shadx0\shady60\shadr6\shado56 \shadc0 Heap: \
\
	Max heap implementation.\
\
	i -> level of a node in the heap\
\
	parent -> i/2\
	left -> 2*i\
	right -> 2*1+1\
\
		arr[MAX] = [1,3,6,54];\
		\
		Heapification : \
				\
				hepify(i):\
					// applying max heaping\
					left = 2*i;\
					right  = 2*i+1;\
					temp = i;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx2870\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 \shad\shadx0\shady60\shadr6\shado56 \shadc0 						if arr[temp] < arr[left]\
							temp = left;\
						if arr[temp] > arr[right]\
							temp = right;\
						if temp != i\
							t = arr[temp]\
							arr[temp] = arr[left]\
							arr[left] = t\
						hepify(temp)\
\
time complexity = O(logn)\
		where n is the size of input.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf2 \shad\shadx0\shady60\shadr6\shado56 \shadc0 			\
				\
				}